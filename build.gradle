plugins {
    id 'java'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.0.0'
}

group = 'cl.nightcore'
version = '1.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://mvn.lumine.io/repository/maven-public/' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://repo.extendedclip.com/releases/" }
    maven { url 'https://repo.oraxen.com/releases' }
    maven { url 'https://repo.codemc.org/repository/maven-public/' }

    maven { url "https://repo.nexomc.com/releases" }
    maven { url "https://repo.alessiodp.com/releases/" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://jitpack.io" }
    maven {
        name = "modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }
    maven { url = uri("https://repo.codemc.io/repository/maven-snapshots/") }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven { url 'https://mvn.lumine.io/repository/maven-public/' }
}

dependencies {
    // Adventure - SE INCLUIRÁN en el JAR final
/*    implementation "net.kyori:adventure-api:4.17.0"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.17.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.4"*/

    // Dependencias que NO se incluyen (compileOnly)
    //compileOnly 'org.spigotmc:spigot-api:1.21.8-R0.1-SNAPSHOT'
    compileOnly("io.lumine:Mythic-Dist:5.7.2")
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.3.0"
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'dev.aurelium:auraskills-api-bukkit:2.3.3'
    compileOnly 'dev.aurelium:auraskills-api:2.3.3'
    compileOnly 'com.github.retrooper:packetevents-spigot:2.9.4'
    compileOnly 'dev.jorel:commandapi-bukkit-core:10.1.2'
    annotationProcessor 'dev.jorel:commandapi-annotations:10.1.2'
    compileOnly 'io.lumine:Mythic-Dist:5.7.2'
    compileOnly("com.ticxo.modelengine:ModelEngine:R4.0.9")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Configuración del Shadow Plugin
shadowJar {
    // Relocar Adventure para evitar conflictos con otros plugins
    relocate 'net.kyori.adventure', 'cl.nightcore.mythicprojectiles.libs.adventure'
    relocate 'net.kyori.examination', 'cl.nightcore.mythicprojectiles.libs.examination'

    // Nombre del archivo final (sin el sufijo -all)
    archiveClassifier.set('')

    // Excluir archivos de firma y metadatos innecesarios
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'

    // Minimizar el JAR (opcional, para reducir tamaño)
    minimize()
}

// Hacer que el comando 'build' use shadowJar en lugar del jar normal
//build.dependsOn shadowJar

// Configurar para que publish use el shadowJar
publishing {
    publications {
        maven(MavenPublication) {
            // Publicar el shadowJar en lugar del JAR normal
            //artifact jar

            groupId = 'cl.nightcore'
            artifactId = 'MythicProjectiles'
            version = '1.2'
        }
    }
}