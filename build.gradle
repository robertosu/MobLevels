plugins {
    id 'java'
}

group = 'cl.nightcore'
version = '1.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://mvn.lumine.io/repository/maven-public/' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://repo.extendedclip.com/releases/" }
    maven { url 'https://repo.oraxen.com/releases' }
    maven { url 'https://repo.codemc.org/repository/maven-public/' }
    maven { url 'https://repo.jeff-media.com/public/' }
    maven { url "https://repo.nexomc.com/releases" }
    maven { url "https://repo.alessiodp.com/releases/" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://jitpack.io" }
    maven {
        name = "modrinth"
        url = "https://api.modrinth.com/maven"
    }

    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }

    maven { url = uri("https://repo.codemc.io/repository/maven-snapshots/") }
}

dependencies {
    compileOnly("io.lumine:Mythic-Dist:5.7.2")
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    //compileOnly("org.spigotmc:spigot:1.21.4-R0.1-SNAPSHOT:remapped-mojang")
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.3.0"
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'dev.aurelium:auraskills-api-bukkit:2.3.3'
    compileOnly 'dev.aurelium:auraskills-api:2.3.3'
    compileOnly 'com.github.retrooper:packetevents-spigot:2.9.4'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
